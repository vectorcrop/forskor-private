<div class="page-content-wrapper py-5 min-mw-100">
  <div class="container-lg">
    <center>
      <h3>Cooking Orders</h3>
    </center>
    <a href="/bigwig" class="btn btn-info mb-3 mt-3">Refresh</a>

    <div class="card">
      <div class="card-body p-3">
        <table class="data-table w-100 min-mw-100" id="dataTable">
          <thead>
            <tr>
              <th>Order ID</th>
              <th>Date</th>
              <th>Time</th>
              <th>Name</th>
              <th>Phone</th>
              <th>Address</th>
              <th>Pincode</th>
              <th>Payment</th>
              <th>Status</th>
              <th>Items Info</th>
              <th>Actions</th>
            </tr>
          </thead>

          <tbody>
            {{#each orders}}
            <tr>
              <td>{{this.orderId}}</td>
              <td> {{#getDate this.date}}{{/getDate}}</td>
              <td> {{#getTime this.date}}{{/getTime}}</td>
              <td>{{this.deliveryDetails.name}}</font>
              </td>
              <td>{{this.deliveryDetails.phone}}</font>
              </td>
              <td>{{this.deliveryDetails.address}}</font>
              </td>
              <td>{{this.deliveryDetails.pincode}}</td>

              <td>{{this.paymentMethod}}</td>


              <td class="text-uppercase">{{this.status}}</td>
              {{!-- {{#ifeq this.status "cancelled"}}
              {{else}}
              <td class="text-uppercase">{{this.status}}
              </td>
              {{/ifeq}} --}}


              <td><a href="/bigwig/view-ordered-products/{{this._id}}" class="btn btn-info btn-sm"
                  type="button">Items</a></td>

              <td>
                {{#ifeq this.status "confirmed"}}
                <div>
                  {{!-- Cooking --}}
                  <a class="btn btn-primary"
                    href="/bigwig/change-status/?status=cooking&orderId={{this._id}}">Cooking</a>

                  {{!-- Cancelled --}}
                  <a href="/bigwig/change-status/?status=cancelled&orderId={{this._id}}"
                    onclick="return confirm('Are You Sure to Cancel This Order ?')" class="btn btn-danger">Cancel</a>
                </div>
                {{/ifeq}}

                {{#ifeq this.status "cooking"}}
                {{!-- Cooked --}}
                <a class="btn btn-primary" href="/bigwig/change-status/?status=packed&orderId={{this._id}}">Cooked</a>
                {{/ifeq}}

                {{#ifeq this.status "packed"}}
                {{!-- Dispatched --}}
                <a class="btn btn-primary"
                  href="/bigwig/change-status/?status=dispatched&orderId={{this._id}}">Dispatch</a>
                {{/ifeq}}
              </td>
            </tr>
            {{/each}}

          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<!-- Bootstrap Basic Modal-->
<div class="modal fade" id="userinfo" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
    <div class="modal-content">
      <div class="modal-header">
        <h6 class="modal-title" id="exampleModalLabel">Modal Heading</h6>
        <button class="btn btn-close p-1 ms-auto" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      {{#each orders}}
      <div class="modal-body">
        <p class="mb-0">{{this.deliveryDetails.name}}</p>
      </div>
      {{/each}}

      <div class="modal-footer">
        <button class="btn btn-sm btn-secondary" type="button" data-bs-dismiss="modal">Close</button>
        <button class="btn btn-sm btn-success" type="button">Save</button>
      </div>
    </div>
  </div>
</div>


{{!-- <th>Order ID</th>
<th>Date</th>
<th>Time</th>
<th>Name</th>
<th>Phone</th>
<th>Address</th>
<th>Pincode</th>
<th>Payment</th>
<th>Status</th>
<th>Items Info</th>
<th>Actions</th> --}}
<script>

  //  const addNewOrder = (data) => {
  //
  //    const { _id, orderId, date, deliveryDetails, paymentMethod, status, } = data;
  //
  //    // Get the table element in which you want to add row
  //    let table = document.getElementById("dataTable");
  //
  //    // Create a row using the inserRow() method and
  //    // specify the index where you want to add the row
  //    let row = table.insertRow(0);
  //
  //    // Create table cells
  //    let orderIdTr = row.insertCell(0);
  //    let dateTr = row.insertCell(1);
  //    let timeTr = row.insertCell(2);
  //    let nameTr = row.insertCell(3);
  //    let phoneTr = row.insertCell(4);
  //    let addressTr = row.insertCell(5);
  //    let pincodeTr = row.insertCell(6);
  //    let paymentTr = row.insertCell(7);
  //    let statusTr = row.insertCell(8);
  //    let itemInfoTr = row.insertCell(9);
  //    let actionTr = row.insertCell(10);
  //
  //    orderIdTr.innerText = `${orderId}`;
  //    dateTr.innerText = `${date.split("|")[1]}`;
  //    timeTr.innerText = `${date.split("|")[2]}`;
  //    nameTr.innerText = `${deliveryDetails.name}`;
  //    phoneTr.innerText = `${deliveryDetails.phone}`;
  //    addressTr.innerText = `${deliveryDetails.address}`;
  //    pincodeTr.innerText = `${deliveryDetails.pincode}`;
  //    paymentTr.innerText = `${paymentMethod}`;
  //    statusTr.innerText = `${status}`;
  //
  //    itemInfoTr.innerText = document.createElement("a").appendChild(`<a href="/bigwig/view-ordered-products/${_id}" class="btn btn-info btn-sm"  type="button">Items</a>`);
  //    actionTr.innerText =
  //      `
  //    <div>
  //        {{!-- Cooking --}}
  //        <a class="btn btn-primary"
  //          href="/bigwig/change-status/?status=cooking&orderId=${_id}">Cooking</a>
  //
  //        {{!-- Cancelled --}}
  //        <a href="/bigwig/change-status/?status=cancelled&orderId=${_id}"
  //          onclick="return confirm('Are You Sure to Cancel This Order ?')" class="btn btn-danger">Cancel</a>
  //    </div>
  //    `
  //  }

  const socket = io();

  socket.on("status-confirmed", (order) => {
    addRow(order)
  })
  socket.on("status-cooking", (order) => {
    addRow(order)
  })
  socket.on("status-packed", (order) => {
    addRow(order)
  })
  socket.on("status-dispatched", (order) => {
    addRow(order)
  })
  socket.on("status-dispatched", (order) => {
    addRow(order)
  });
  socket.on("status-picked", (order) => {
    addRow(order)
  });
  socket.on("status-cancelled", (order) => {
    addRow(order)
  })
</script>